first 100 data,
{4: {0: {'body_predicate_idx': [0], 'body_predicate_sign': [-1], 'head_predicate_sign': [-1], 'temporal_relation_idx': [(0, 4)], 'temporal_relation_type': ['EQUAL']}, 1: {'body_predicate_idx': [2], 'body_predicate_sign': [1], 'head_predicate_sign': [1], 'temporal_relation_idx': [(2, 4)], 'temporal_relation_type': ['BEFORE']}, 2: {'body_predicate_idx': [3], 'body_predicate_sign': [1], 'head_predicate_sign': [1], 'temporal_relation_idx': [(3, 4)], 'temporal_relation_type': ['EQUAL']}, 3: {'body_predicate_idx': [2], 'body_predicate_sign': [1], 'head_predicate_sign': [-1], 'temporal_relation_idx': [(2, 4)], 'temporal_relation_type': ['BEFORE']}, 4: {'body_predicate_idx': [3], 'body_predicate_sign': [1], 'head_predicate_sign': [-1], 'temporal_relation_idx': [(3, 4)], 'temporal_relation_type': ['EQUAL']}}}

Head = D, base = -0.0074
Rule0: B --> D , B AFTER D, weight=0.0100
Head = E, base = -0.1463


Without SoftMax:
Head = D, base = 0.0125
Rule0: B --> Not D , B BEFORE Not D, weight=-1.2224
Rule1: B --> D , B BEFORE D, weight=0.8303
Rule2: E --> D , E BEFORE D, weight=-0.5963
Rule3: E --> Not D , E BEFORE Not D, weight=-0.8852
Rule4: E ^ B --> Not D , E BEFORE Not D ^ B BEFORE Not D, weight=3.4913
Head = E, base = -0.3327

With SoftMax:
Head = D, base = 0.0147
Rule0: Not A --> Not D , Not A EQUAL Not D, weight=2.2707
Rule1: E --> D , E BEFORE D, weight=-2.2507
Head = E, base = -0.1630

=== Test A-->B, A Before B, base=0, w=1 ====
Initialize with this rule:
Head = B, base = 0.1344
Rule0: A --> B , A BEFORE B, weight=1.1057
start generate simple rule
start calculate intensity log and integral.
start searching.
Train finished, Final rule set is:
Head = B, base = 0.1344
Rule0: A --> B , A BEFORE B, weight=1.1057


=== Test A-->B, A Equal B, base=0, w=1 ===
Train finished, Final rule set is:
Head = B, base = 0.0282
Rule0: A --> Not B , A BEFORE Not B, weight=0.0066
Rule1: A --> B , A EQUAL B, weight=1.1607

=== Test Not A-->B, Not A Equal B, base=0, w=1 ===
Head = B, base = 0.1756
Rule0: A --> B , A BEFORE B, weight=0.1120
Rule1: Not A --> B , Not A EQUAL B, weight=0.7057

=== Test :Head = C, base = -0.0000
Rule0: A ^ B --> C , A BEFORE C ^ B BEFORE C, weight=1.0000
Intensity A is 0.5
Intensity B is 1.0  ===
=== Result (1) torch, eps=0.01 ===
Head = C, base = 0.0942
Rule0: B --> C , B BEFORE C, weight=0.0137
Rule1: A --> C , A BEFORE C, weight=-0.0233
Rule2: A ^ B --> C , A BEFORE C ^ B BEFORE C, weight=0.9279
=== Result (2) torch, eps=0.01 ===
Head = C, base = 0.0561
Rule0: Not B --> C , Not B BEFORE C, weight=-0.0056
Rule1: B --> C , B BEFORE C, weight=0.1109
Rule2: A --> C , A BEFORE C, weight=0.0451
Rule3: B --> Not C , B BEFORE Not C, weight=0.1174
Rule4: A ^ Not B --> C , A BEFORE C ^ Not B BEFORE C, weight=-0.1049
Rule5: A ^ B --> C , A BEFORE C ^ B BEFORE C, weight=0.9502
=== Result (3) cp ===
Head = C, base = 0.0620
Rule0: A --> C , A BEFORE C, weight=0.0042
Rule1: B --> C , B BEFORE C, weight=0.0317
Rule2: B ^ A --> C , B BEFORE C ^ A BEFORE C, weight=0.9425

=== Test: Head = C, base = -0.0000
Rule0: A ^ B --> C , A BEFORE C ^ A EQUAL B, weight=1.0000
Intensity A is 0.5
Intensity B is 1.0
 ===
=== Result:
Head = C, base = 0.0858
Rule0: A --> C , A BEFORE C, weight=0.0498
Rule1: B --> C , B EQUAL C, weight=0.0157
Rule2: B --> Not C , B BEFORE Not C, weight=0.0720
Rule3: Not B --> C , Not B BEFORE C, weight=0.0521
Rule4: A --> C , A EQUAL C, weight=0.1571
Rule5: B ^ A --> C , B EQUAL A ^ A BEFORE C, weight=0.5651
Rule6: A ^ B --> C , A BEFORE B ^ B EQUAL C, weight=0.5265
Rule7: A ^ B --> Not C , A EQUAL Not C ^ B BEFORE Not C, weight=0.2641
Rule8: Not A ^ Not B --> C , Not A BEFORE C ^ Not B BEFORE C, weight=0.0889
==

=== Test: Head = C, base = -0.0000
Rule0: A --> C , A BEFORE C, weight=1.0000
Rule1: B --> C , B BEFORE C, weight=1.0000 
Intensity A is 0.5
Intensity B is 1.0
===
== Result:
Maximum rule number reached.
Train finished, Final rule set is:
Head = C, base = 0.0809
Rule0: B --> C , B BEFORE C, weight=0.5214
Rule1: A --> C , A BEFORE C, weight=0.5964
Rule2: Not B --> C , Not B BEFORE C, weight=0.2056
Rule3: B --> Not C , B BEFORE Not C, weight=-0.0247
Rule4: Not B --> Not C , Not B BEFORE Not C, weight=-0.0598

=== Test:Head = D, base = -0.0000
Rule0: A ^ B ^ C --> D , A BEFORE D ^ B BEFORE D ^ C BEFORE D, weight=1.0000
Intensity A is 0.5
Intensity B is 1.0
Intensity C is 0.7
=== Result:
Head = D, base = 0.0960
Rule0: A --> D , A BEFORE D, weight=-0.0487
Rule1: B --> D , B BEFORE D, weight=0.0827
Rule2: C --> D , C BEFORE D, weight=0.0230
Rule3: Not B --> Not D , Not B BEFORE Not D, weight=0.0114
Rule4: Not A --> Not D , Not A BEFORE Not D, weight=-0.1040
Rule5: Not C --> Not D , Not C BEFORE Not D, weight=0.0192
Rule6: Not B --> Not D , Not B EQUAL Not D, weight=0.0591
Rule7: A --> Not D , A EQUAL Not D, weight=-0.1344
Rule8: Not C --> Not D , Not C EQUAL Not D, weight=0.0695
Rule9: C --> D , C EQUAL D, weight=0.0750
Rule10: C ^ A --> D , C BEFORE D ^ A BEFORE D, weight=0.0232
Rule11: C ^ B --> D , C BEFORE D ^ B BEFORE D, weight=-0.0216
Rule12: Not B ^ C --> D , Not B EQUAL C ^ C BEFORE D, weight=0.4289
Rule13: Not A ^ Not B --> Not D , Not A BEFORE Not D ^ Not B BEFORE Not D, weight=0.2839
Rule14: B ^ Not A --> Not D , B EQUAL Not D ^ Not A BEFORE Not D, weight=0.3520
Rule15: A ^ Not C --> Not D , A EQUAL Not D ^ Not C BEFORE Not D, weight=0.3776
Rule16: B ^ A --> Not D , B BEFORE Not D ^ A EQUAL Not D, weight=0.3313
[GT]Rule17: B ^ C ^ A --> D , B BEFORE D ^ C BEFORE D ^ A BEFORE D, weight=1.1841


=== Test:Head = D, base = -0.0000
Rule0: A ^ B --> D , A BEFORE D ^ B EQUAL D, weight=1.0000
Rule1: C --> D , C BEFORE D, weight=1.0000
Intensity A is 0.5
Intensity B is 1.0
Intensity C is 0.7
=== Result: (with cvxpy log-like is slowly but consistently going down.)
Head = D, base = 0.0918
Rule0: A --> D , A BEFORE D, weight=-0.1433
[GT]Rule1: C --> D , C BEFORE D, weight=0.6066
Rule2: B --> D , B EQUAL D, weight=0.1544
Rule3: Not C --> Not D , Not C BEFORE Not D, weight=0.0297
Rule4: Not B --> D , Not B BEFORE D, weight=0.0810
Rule5: Not B --> D , Not B EQUAL D, weight=0.0178
Rule6: B --> Not D , B BEFORE Not D, weight=0.0434
Rule7: C --> D , C EQUAL D, weight=0.0003
Rule8: Not A --> Not D , Not A BEFORE Not D, weight=-0.0550
[GT]Rule9: B ^ A --> D , B AFTER A ^ A BEFORE D, weight=0.3973
Rule10: Not B ^ Not C --> Not D , Not B AFTER Not C ^ Not C BEFORE Not D, weight=0.4452
Rule11: A ^ Not B --> D , A BEFORE D ^ Not B EQUAL D, weight=0.3910
Rule12: C ^ B --> Not D , C BEFORE Not D ^ B BEFORE Not D, weight=0.0740
Rule13: Not B ^ C --> D , Not B EQUAL C ^ C EQUAL D, weight=0.4855
Rule14: Not B ^ Not A --> Not D , Not B BEFORE Not A ^ Not A BEFORE Not D, weight=0.3075


=== Test:Head = D, base = -0.0000
Rule0: A ^ B --> D , A BEFORE D ^ B EQUAL D, weight=1.0000
Rule1: B ^ C --> D , B BEFORE C ^ C EQUAL D, weight=1.0000
Intensity A is 0.5
Intensity B is 1.0
Intensity C is 0.7
num_sample= 500
=== Result:Head = D, base = 0.0584
Rule0: A --> D , A BEFORE D, weight=-0.1133
Rule1: B --> D , B BEFORE D, weight=0.0653
Rule2: Not C --> Not D , Not C BEFORE Not D, weight=0.0642
Rule3: C --> D , C EQUAL D, weight=0.1100
Rule4: B --> D , B EQUAL D, weight=-0.0141
Rule5: Not A --> D , Not A BEFORE D, weight=0.0453
Rule6: Not A --> D , Not A EQUAL D, weight=0.1032
Rule7: A --> Not D , A EQUAL Not D, weight=-0.0732
Rule8: Not B --> D , Not B EQUAL D, weight=0.0406
Rule9: Not B ^ A --> D , Not B BEFORE D ^ A BEFORE D, weight=0.0838
[GT]Rule10: C ^ B --> D , C AFTER B ^ B BEFORE D, weight=0.2905
Rule11: Not A ^ Not C --> Not D , Not A EQUAL Not C ^ Not C BEFORE Not D, weight=0.7127
[GT]Rule12: A ^ B --> D , A BEFORE D ^ B EQUAL D, weight=0.3974
Rule13: C ^ Not A --> D , C BEFORE D ^ Not A BEFORE D, weight=0.1295
Rule14: Not B ^ A --> Not D , Not B BEFORE Not D ^ A EQUAL Not D, weight=0.4066
===Generate 1000 samples===
Train finished, Final rule set is:
Head = D, base = 0.0863
Rule0: A --> D , A BEFORE D, weight=-0.0134
Rule1: B --> D , B EQUAL D, weight=-0.0037
Rule2: C --> D , C EQUAL D, weight=-0.0080
Rule3: Not A --> Not D , Not A BEFORE Not D, weight=0.0066
Rule4: B --> D , B BEFORE D, weight=0.0047
Rule5: A --> D , A EQUAL D, weight=0.0977
Rule6: C --> D , C BEFORE D, weight=-0.0019
[GT]Rule7: B ^ A --> D , B EQUAL D ^ A BEFORE D, weight=0.3805
Rule8: Not C ^ B --> D , Not C BEFORE D ^ B EQUAL D, weight=0.4184
[GT]Rule9: B ^ C --> D , B BEFORE C ^ C EQUAL D, weight=0.5924
Rule10: Not C ^ Not A --> Not D , Not C BEFORE Not A ^ Not A BEFORE Not D, weight=0.3234
Rule11: A ^ C --> D , A BEFORE C ^ C BEFORE D, weight=0.1792


=== Test:Head = E, base = -0.0000
Rule0: A --> E , A BEFORE E, weight=0.2000
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.2000
Rule2: A ^ B ^ Not C --> E , A BEFORE E ^ B EQUAL E ^ Not C BEFORE E, weight=0.2000
Rule3: D --> E , D AFTER E, weight=0.2000
Rule4: C ^ D --> E , C BEFORE E ^ C EQUAL D, weight=0.2000
Intensity A is 0.5
Intensity B is 1.0
Intensity C is 0.7
Intensity D is 0.3
Generate 20000 samples===
--- lr=0.05,batchsize=16, N_best=1, no avg weight, no l1 penalty ---
--- learned for 24 hours, still not finished ---
Head = E, base(torch) = 0.0997,
[GT]Rule0: A --> E , A BEFORE E, weight(torch)=0.1997.
Rule1: A --> Not E , A BEFORE Not E, weight(torch)=0.0484.
Rule2: B --> E , B BEFORE E, weight(torch)=0.0039.
Rule3: Not B --> E , Not B BEFORE E, weight(torch)=0.0613.
[GT-]Rule4: C --> E , C BEFORE E, weight(torch)=0.0242.
Rule5: Not B --> Not E , Not B BEFORE Not E, weight(torch)=0.0288.
Rule6: B --> Not E , B BEFORE Not E, weight(torch)=0.0920.
[GT-]Rule7: Not C --> E , Not C BEFORE E, weight(torch)=0.0836.
[GT-]Rule8: D --> E , D BEFORE E, weight(torch)=0.0656.
Rule9: Not A --> E , Not A BEFORE E, weight(torch)=0.0256.
Rule10: C --> Not E , C BEFORE Not E, weight(torch)=0.0394.
Rule11: Not C --> Not E , Not C BEFORE Not E, weight(torch)=0.0268.
Rule12: D --> Not E , D BEFORE Not E, weight(torch)=0.0222.
Rule13: B --> E , B EQUAL E, weight(torch)=0.1633.
Rule14: Not A --> Not E , Not A BEFORE Not E, weight(torch)=0.0347.

--- lr=0.01 ,batchsize=32, N_best=2, with avg weight, with l1 penalty ---
--- learned for 14 hours, still not finished ---
Head = E, base(torch) = 0.0696,
[GT]Rule0: A --> E , A BEFORE E, weight(torch)=0.1650.
Rule1: B --> E , B BEFORE E, weight(torch)=0.0067.
Rule2: Not B --> E , Not B BEFORE E, weight(torch)=0.0127.
[GT-]Rule3: B --> E , B EQUAL E, weight(torch)=0.0323.
[GT-]Rule4: C --> E , C BEFORE E, weight(torch)=0.0014.
[GT-]Rule5: Not C --> E , Not C BEFORE E, weight(torch)=0.0231.
Rule6: Not A --> E , Not A BEFORE E, weight(torch)=-0.0051.
Rule7: B --> Not E , B BEFORE Not E, weight(torch)=-0.0079.
Rule8: Not B --> Not E , Not B BEFORE Not E, weight(torch)=-0.0122.
[GT-]Rule9: D --> E , D BEFORE E, weight(torch)=-0.0080.
Rule10: Not D --> E , Not D BEFORE E, weight(torch)=0.0018.
Rule11: C --> Not E , C BEFORE Not E, weight(torch)=-0.0023.
Rule12: Not C --> Not E , Not C BEFORE Not E, weight(torch)=-0.0213.
Rule13: Not B --> E , Not B EQUAL E, weight(torch)=-0.0011.
[GT-]Rule14: B ^ A --> E , B BEFORE E ^ A BEFORE E, weight(torch)=0.0039.

--- lr=0.01 ,batchsize=32, N_best=2, with avg weight, with l1 penalty ---
--- learned for 14 hours, still not finished ---
Head = E, base(torch) = 0.0847,
[GT]Rule0: A --> E , A BEFORE E, weight(torch)=0.1853.
Rule1: B --> E , B BEFORE E, weight(torch)=-0.0067.
Rule2: Not B --> E , Not B BEFORE E, weight(torch)=-0.0006.
[GT-]Rule3: B --> E , B EQUAL E, weight(torch)=0.0328.
Rule4: Not B --> Not E , Not B BEFORE Not E, weight(torch)=0.0003.
[GT-]Rule5: C --> E , C BEFORE E, weight(torch)=-0.0011.
[GT-]Rule6: Not C --> E , Not C BEFORE E, weight(torch)=0.0051.
Rule7: Not A --> E , Not A BEFORE E, weight(torch)=0.0010.
[GT-]Rule8: D --> E , D BEFORE E, weight(torch)=0.0215.
Rule9: Not C --> Not E , Not C BEFORE Not E, weight(torch)=-0.0033.
Rule10: Not A --> Not E , Not A BEFORE Not E, weight(torch)=-0.0012.
Rule11: C --> Not E , C BEFORE Not E, weight(torch)=0.0016.
[GT-]Rule12: B ^ A --> E , B BEFORE E ^ A BEFORE E, weight(torch)=-0.0030.
Rule13: C ^ B --> E , C BEFORE E ^ B BEFORE E, weight(torch)=-0.0058.
=== end test case ===


===Test:Generate 1000 samples
with following rules:
Head = E, base = 0.0000
Rule0: A --> E , A BEFORE E, weight=0.3000
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4000
Rule2: B --> E , B EQUAL E, weight=0.5000
Rule3: D --> E , D BEFORE E, weight=0.6000
Rule4: Not C --> E , Not C BEFORE E, weight=0.7000
Intensity A is 0.5
Intensity B is 1.0
Intensity C is 0.7
Intensity D is 0.3
===
[GT=0.0]Head = E, base = 0.0807
[GT=0.3]Rule0: A --> E , A BEFORE E, weight=0.2270
[GT=0.7]Rule1: Not C --> E , Not C BEFORE E, weight=0.7113
Rule2: Not B --> E , Not B BEFORE E, weight=0.0255
[GT=0.6]Rule3: D --> E , D BEFORE E, weight=0.5146
[GT=0.5]Rule4: B --> E , B EQUAL E, weight=0.5617
Rule5: Not A --> E , Not A BEFORE E, weight=0.0296
Rule6: Not D --> E , Not D EQUAL E, weight=0.0044
Rule7: A --> E , A EQUAL E, weight=0.0368
Rule8: D --> E , D EQUAL E, weight=0.0037
Rule9: C ^ A --> E , C BEFORE E ^ A BEFORE E, weight=0.0587
Rule10: A ^ Not C --> E , A BEFORE E ^ Not C BEFORE E, weight=0.0044
Rule11: A ^ Not B --> E , A BEFORE E ^ Not B BEFORE E, weight=0.0102
Rule12: A ^ D --> E , A BEFORE E ^ D BEFORE E, weight=0.0061
[GT=0.4]Rule13: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.0009
Rule14: Not C ^ Not A --> E , Not C BEFORE E ^ Not A BEFORE E, weight=0.0149
Rule15: Not B ^ Not D --> E , Not B BEFORE Not D ^ Not D EQUAL E, weight=0.0007
Rule16: Not B ^ C ^ A --> E , Not B BEFORE E ^ C BEFORE E ^ A BEFORE E, weight=0.0045
Rule17: C ^ A ^ Not B --> E , C BEFORE A ^ A BEFORE E ^ Not B BEFORE E, weight=0.0016
Rule18: C ^ A ^ D --> E , C BEFORE E ^ A BEFORE E ^ D BEFORE E, weight=0.0025


===
Test: generate 2000 samples
with following rules:
Head = E, base = 0.0000
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.3000
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4000
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.5000
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.6000
Rule4: Not C --> E , Not C BEFORE E, weight=0.7000
Intensity A is 2
Intensity B is 2
Intensity C is 2
Intensity D is 2===
====
Result: batch size = 32
learning rate = 0.005
====
Head = E, base = 0.1137
[GT=0.7]Rule0: Not C --> E , Not C BEFORE E, weight=0.6563
Rule1: C --> E , C EQUAL E, weight=0.0827
Rule2: D --> E , D BEFORE E, weight=0.0064
[GT=0.3]Rule3: C ^ A --> E , C BEFORE E ^ A BEFORE E, weight=0.2547
Rule4: D ^ Not C --> E , D BEFORE E ^ Not C BEFORE E, weight=0.0312
Rule5: Not A ^ C --> E , Not A BEFORE E ^ C BEFORE E, weight=0.0357
[GT=0.4]Rule6: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.2744
[GT=0.6]Rule7: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight=0.3834
Rule8: D ^ B --> Not E , D EQUAL Not E ^ B BEFORE Not E, weight=0.0298
Rule9: B ^ D --> E , B EQUAL E ^ D BEFORE E, weight=0.1708
Rule10: C ^ D --> Not E , C BEFORE D ^ D EQUAL Not E, weight=0.0222
Rule11: D ^ Not A --> E , D BEFORE E ^ Not A BEFORE E, weight=0.0136
Rule12: B ^ Not C --> E , B BEFORE E ^ Not C EQUAL E, weight=0.0088
Rule13: B ^ C ^ A --> E , B EQUAL E ^ C BEFORE E ^ A BEFORE E, weight=0.1686
Rule14: B ^ Not A ^ C --> E , B EQUAL E ^ Not A BEFORE E ^ C BEFORE E, weight=0.0574
Rule15: D ^ A ^ B --> E , D BEFORE E ^ A BEFORE E ^ B EQUAL E, weight=0.0504
Rule16: A ^ D ^ C --> E , A BEFORE E ^ D BEFORE E ^ C EQUAL E, weight=0.0628
Rule17: C ^ D ^ B --> Not E , C BEFORE D ^ D EQUAL Not E ^ B BEFORE Not E, weight=0.0261
[GT=0.5]Rule18: C ^ B ^ D --> E , C BEFORE E ^ B EQUAL E ^ D BEFORE E, weight=0.0562
Rule19: A ^ C ^ D --> Not E , A BEFORE Not E ^ C BEFORE D ^ D EQUAL Not E, weight=0.0081


====
batch size = 32
learning rate = 0.005
====
Head = E, base = 0.1096
[GT=0.7]Rule0: Not C --> E , Not C BEFORE E, weight=0.6337
Rule1: C --> E , C BEFORE E, weight=0.0256
Rule2: B --> E , B EQUAL E, weight=0.1389
Rule3: C --> E , C EQUAL E, weight=0.1356
Rule4: D --> E , D BEFORE E, weight=0.0047
Rule5: Not A --> E , Not A BEFORE E, weight=0.0045
[GT=0.3]Rule6: C ^ A --> E , C BEFORE E ^ A BEFORE E, weight=0.2488
Rule7: D ^ Not C --> E , D BEFORE E ^ Not C BEFORE E, weight=0.0434
Rule8: Not A ^ C --> E , Not A BEFORE E ^ C BEFORE E, weight=0.0325
[GT=0.4]Rule9: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4142
[GT=0.6]Rule10: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight=0.4198
Rule11: Not A ^ D --> E , Not A BEFORE E ^ D BEFORE E, weight=0.0094
Rule12: B ^ Not A --> E , B EQUAL E ^ Not A BEFORE E, weight=0.0723
Rule13: A ^ Not D --> E , A BEFORE E ^ Not D BEFORE E, weight=0.0113
Rule14: B ^ D --> Not E , B BEFORE D ^ D EQUAL Not E, weight=0.0287
Rule15: C ^ Not B --> E , C BEFORE E ^ Not B EQUAL E, weight=0.0154
Rule16: Not D ^ A --> Not E , Not D BEFORE A ^ A EQUAL Not E, weight=0.0024
Rule17: D ^ C ^ A --> E , D BEFORE E ^ C BEFORE E ^ A BEFORE E, weight=0.0126
Rule18: B ^ D ^ Not C --> E , B EQUAL E ^ D BEFORE E ^ Not C BEFORE E, weight=0.0289
Rule19: D ^ Not A ^ C --> E , D BEFORE E ^ Not A BEFORE E ^ C BEFORE E, weight=0.0075
[search_algorithm] Elapsed: 2.5931 hour.


====
batch size = 64
learning rate = 0.005
====
Head = E, base = 0.0940
Rule0: A --> E , A BEFORE E, weight=0.0496
[GT=0.7]Rule1: Not C --> E , Not C BEFORE E, weight=0.6033
Rule2: C --> E , C BEFORE E, weight=0.0519
Rule3: C --> E , C EQUAL E, weight=0.3088
Rule4: B --> E , B EQUAL E, weight=0.3018
Rule5: B --> Not E , B BEFORE Not E, weight=0.0203
Rule6: Not A --> E , Not A BEFORE E, weight=0.0168
Rule7: D --> Not E , D EQUAL Not E, weight=0.0148
Rule8: A --> Not E , A BEFORE Not E, weight=0.0106
Rule9: Not A --> Not E , Not A EQUAL Not E, weight=0.0360
[GT=0.3]Rule10: C ^ A --> E , C BEFORE E ^ A BEFORE E, weight=0.2044
Rule11: D ^ Not C --> E , D BEFORE E ^ Not C BEFORE E, weight=0.0871
Rule12: B ^ C --> E , B EQUAL E ^ C BEFORE E, weight=0.0762
[GT=0.6]Rule13: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight=0.2488
[GT=0.4]Rule14: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.2083
Rule15: Not A ^ D --> E , Not A BEFORE E ^ D BEFORE E, weight=0.0225
Rule16: C ^ Not A --> E , C BEFORE E ^ Not A BEFORE E, weight=0.0327
Rule17: C ^ D --> Not E , C BEFORE D ^ D EQUAL Not E, weight=0.0001
Rule18: D ^ A --> Not E , D EQUAL A ^ A BEFORE Not E, weight=0.0236
Rule19: Not D ^ Not A --> Not E , Not D EQUAL Not A ^ Not A EQUAL Not E, weight=0.0044
[search_algorithm] Elapsed: 1.7541 hour.


====
batch size = 32
learning rate = 0.01
====
Head = E, base = 0.0971
[GT=0.7]Rule0: Not C --> E , Not C BEFORE E, weight=0.6613
Rule1: C --> E , C EQUAL E, weight=0.0938
Rule2: Not A --> E , Not A BEFORE E, weight=0.0271
[GT=0.3]Rule3: C ^ A --> E , C BEFORE E ^ A BEFORE E, weight=0.2212
Rule4: D ^ Not C --> E , D BEFORE E ^ Not C BEFORE E, weight=0.0184
Rule5: B ^ C --> E , B EQUAL E ^ C BEFORE E, weight=0.0546
[GT=0.4]Rule6: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.3352
[GT=0.6]Rule7: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight=0.3743
Rule8: Not A ^ D --> E , Not A BEFORE E ^ D BEFORE E, weight=0.0069
Rule9: C ^ Not A --> E , C BEFORE E ^ Not A BEFORE E, weight=0.0642
Rule10: B ^ D --> Not E , B BEFORE D ^ D EQUAL Not E, weight=0.0517
Rule11: A ^ Not D --> E , A BEFORE E ^ Not D BEFORE E, weight=0.0129
Rule12: C ^ Not B --> E , C BEFORE E ^ Not B EQUAL E, weight=0.0909
Rule13: A ^ Not D --> E , A BEFORE Not D ^ Not D EQUAL E, weight=0.0216
Rule14: B ^ D ^ Not C --> E , B EQUAL E ^ D BEFORE E ^ Not C BEFORE E, weight=0.0757
[GT=0.5]Rule15: D ^ B ^ C --> E , D BEFORE E ^ B EQUAL E ^ C BEFORE E, weight=0.1281
Rule16: D ^ A ^ B --> E , D BEFORE E ^ A BEFORE E ^ B EQUAL E, weight=0.1403
Rule17: A ^ D ^ C --> E , A BEFORE E ^ D BEFORE E ^ C EQUAL E, weight=0.0103
Rule18: Not C ^ Not A ^ D --> E , Not C EQUAL D ^ Not A BEFORE E ^ D BEFORE E, weight=0.0127
Rule19: D ^ C ^ Not A --> E , D BEFORE E ^ C BEFORE E ^ Not A BEFORE E, weight=0.0074
[search_algorithm] Elapsed: 3.0485 hour.

===
batch size = 64
learning rate = 0.01
===
Head = E, base = 0.0981
[GT=0.7]Rule0: Not C --> E , Not C BEFORE E, weight=0.6804
Rule1: B --> E , B EQUAL E, weight=0.0948
Rule2: C --> E , C EQUAL E, weight=0.1943
Rule3: B --> Not E , B BEFORE Not E, weight=0.0112
Rule4: D --> E , D BEFORE E, weight=0.0135
Rule5: Not D --> E , Not D BEFORE E, weight=0.0007
Rule6: Not A --> E , Not A BEFORE E, weight=0.0497
Rule7: A --> Not E , A BEFORE Not E, weight=0.0330
Rule8: Not B --> E , Not B EQUAL E, weight=0.0086
[GT=0.3]Rule9: C ^ A --> E , C BEFORE E ^ A BEFORE E, weight=0.2442
Rule10: B ^ Not C --> E , B EQUAL E ^ Not C BEFORE E, weight=0.1832
Rule11: Not A ^ C --> E , Not A BEFORE C ^ C BEFORE E, weight=0.0455
[GT=0.4]Rule12: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.3499
[GT=0.6]Rule13: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight=0.3548
Rule14: D ^ B --> Not E , D EQUAL Not E ^ B BEFORE Not E, weight=0.0418
Rule15: A ^ D --> E , A BEFORE E ^ D BEFORE E, weight=0.0310
Rule16: B ^ Not D --> E , B EQUAL E ^ Not D BEFORE E, weight=0.0805
Rule17: Not D ^ Not A --> E , Not D EQUAL E ^ Not A BEFORE E, weight=0.0045
Rule18: Not B ^ A --> Not E , Not B BEFORE Not E ^ A BEFORE Not E, weight=0.0034
Rule19: C ^ Not B --> E , C BEFORE E ^ Not B EQUAL E, weight=0.0116
[search_algorithm] Elapsed: 1.8353 hour.

===
batch_size=64
num_iter=5
epsilon=0.001
gain_threshold=0.1
low_grad_threshold=0.01
weight_threshold=0.01
learning_rate=0.005
stop criteria is grad-norm < epsilon
===
Head = E, base = 0.1090
[GT=0.7]Rule0: Not C --> E , Not C BEFORE E, weight=0.6194
Rule1: C --> E , C EQUAL E, weight=0.1326
Rule2: B --> E , B EQUAL E, weight=0.1904
Rule3: Not A --> E , Not A BEFORE E, weight=0.0389
[GT=0.3]Rule4: C ^ A --> E , C BEFORE E ^ A BEFORE E, weight=0.2836
Rule5: D ^ Not C --> E , D BEFORE E ^ Not C BEFORE E, weight=0.0725
[GT=0.6]Rule6: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight=0.4140
[GT=0.4]Rule7: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.2514
Rule8: D ^ A ^ B --> E , D BEFORE E ^ A BEFORE E ^ B EQUAL E, weight=0.2292
[search_algorithm] Elapsed: 2.0945 hour.

===
batch_size=64
num_iter=5
epsilon=0.001
gain_threshold=0.1
low_grad_threshold=0.01
weight_threshold=0.01
learning_rate=0.005
stop criteria is grad-norm < epsilon AND num_batch_no_update > 20 
===
Head = E, base = 0.1092
[GT=0.7]Rule0: Not C --> E , Not C BEFORE E, weight=0.6272
Rule1: C --> E , C EQUAL E, weight=0.1327
Rule2: B --> E , B EQUAL E, weight=0.1924
[GT=0.3]Rule3: C ^ A --> E , C BEFORE E ^ A BEFORE E, weight=0.2399
Rule4: D ^ Not C --> E , D BEFORE E ^ Not C BEFORE E, weight=0.0662
Rule5: Not A ^ C --> E , Not A BEFORE E ^ C BEFORE E, weight=0.0751
[GT=0.6]Rule6: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight=0.4206
[GT=0.4]Rule7: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4469
Rule8: A ^ D --> E , A BEFORE E ^ D BEFORE E, weight=0.0329
[search_algorithm] Elapsed: 2.4424 hour.

===
Fit GT rules
===
batch_size=64
num_iter=5
epsilon=0.001
Run 155 batches
reach max iter num.
grad norm=0.11938703111891756. num_batch_no_update =3
stop criteria is grad-norm < epsilon AND num_batch_no_update > 20 
Head = E, base = 0.1094
[GT=0.3]Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.4411
[GT=0.4]Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4227
[GT=0.5]Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.4160
[GT=0.6]Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5052
[GT=0.7]Rule4: Not C --> E , Not C BEFORE E, weight=0.4931
[Fit data] Elapsed: 5.1260 min.
===
batch_size=64
num_iter=5
epsilon=0.001
stop criteria is grad-norm < epsilon OR num_batch_no_update > 20 
Run 128 batches
grad norm 0.1673999683948907 not smaller than epsilon 0.001. num_batch_no_update =20
rule set is:
Head = E, base = 0.1144
[GT=0.3]Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.4202
[GT=0.4]Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4141
[GT=0.5]Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.4100
[GT=0.6]Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.4568
[GT=0.7]Rule4: Not C --> E , Not C BEFORE E, weight=0.4521
[Fit data] Elapsed: 7.8041 min.
===
batch_size=64
num_iter=10
epsilon=0.001
Run 310 batches
reach max iter num.
grad norm=0.04025288951648742. num_batch_no_update =61
rule set is:
Head = E, base = 0.1117
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.4026
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4217
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3995
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5839
Rule4: Not C --> E , Not C BEFORE E, weight=0.5927
[Fit data] Elapsed: 8.6963 min.
===
batch_size=64
num_iter=15
epsilon=0.001
Run 465 batches
reach max iter num.
grad norm=0.0352664723563211. num_batch_no_update =105
Head = E, base = 0.1161
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.3522
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4354
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3766
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5765
Rule4: Not C --> E , Not C BEFORE E, weight=0.6444
[Fit data] Elapsed: 22.9312 min.
===
batch_size=64
num_iter=20
epsilon=0.001
stop criteria is grad-norm < epsilon AND num_batch_no_update > 20 
Run 620 batches
reach max iter num.
grad norm=0.023800972612493927. num_batch_no_update =230
Head = E, base = 0.1151
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.3208
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4313
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3590
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5669
Rule4: Not C --> E , Not C BEFORE E, weight=0.6776
[Fit data] Elapsed: 16.0286 min.
====
Head = E, base = 0.1121
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.4475
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4280
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.4246
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5177
Rule4: Not C --> E , Not C BEFORE E, weight=0.5072
10 th iter
Head = E, base = 0.1106
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.3994
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4154
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3923
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5921
Rule4: Not C --> E , Not C BEFORE E, weight=0.5969
15 th iter
Head = E, base = 0.1202
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.3514
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4244
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3778
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5799
Rule4: Not C --> E , Not C BEFORE E, weight=0.6507
20 th iter
Head = E, base = 0.1104
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.3225
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4473
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3517
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5682
Rule4: Not C --> E , Not C BEFORE E, weight=0.6803
25 th iter
Head = E, base = 0.1114
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.3054
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4465
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3557
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5585
Rule4: Not C --> E , Not C BEFORE E, weight=0.6932
30 th iter
Head = E, base = 0.1106
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.3026
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4463
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3439
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5473
Rule4: Not C --> E , Not C BEFORE E, weight=0.7002
35 th iter
Head = E, base = 0.1097
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.2972
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4579
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3431
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5569
Rule4: Not C --> E , Not C BEFORE E, weight=0.7009

45 th iter
Head = E, base = 0.1139
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.3017
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4595
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3334
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5531
Rule4: Not C --> E , Not C BEFORE E, weight=0.7032

55 th iter
Head = E, base = 0.1059
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.2988
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4561
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3475
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5561
Rule4: Not C --> E , Not C BEFORE E, weight=0.7029

65 th iter
Head = E, base = 0.1026
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.2993
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4583
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3398
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5567
Rule4: Not C --> E , Not C BEFORE E, weight=0.7034

75 th iter
Head = E, base = 0.1078
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.2958
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4524
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3389
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5594
Rule4: Not C --> E , Not C BEFORE E, weight=0.7006

95 th iter
Head = E, base = 0.1075
Rule0: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight=0.2937
Rule1: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight=0.4479
Rule2: B ^ C ^ D --> E , B EQUAL E ^ C BEFORE E ^ D BEFORE E, weight=0.3325
Rule3: C ^ D --> E , C EQUAL E ^ D BEFORE E, weight=0.5560
Rule4: Not C --> E , Not C BEFORE E, weight=0.6984
===

===Obervation: Deleting redundant rules improve correct weight accuracy===
[*]Rule0: A --> E , A BEFORE E, weight=0.0203
[GT=0.7]Rule1: Not C --> E , Not C BEFORE E, weight=0.6179
[*]Rule2: C --> E , C BEFORE E, weight=0.0202
Rule3: C --> E , C EQUAL E, weight=0.4463
Rule4: B --> E , B EQUAL E, weight=0.4768
[*]Rule5: B --> Not E , B BEFORE Not E, weight=0.0245
[*]Rule6: D --> E , D BEFORE E, weight=0.0286
Rule7: Not A --> E , Not A BEFORE E, weight=0.0321
[GT=0.3]Rule8: C ^ A --> E , C BEFORE E ^ A BEFORE E, weight=0.2580
Rule9: D ^ Not C --> E , D BEFORE E ^ Not C BEFORE E, weight=0.0857
[GT=0.6]Rule10: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight=0.0100
---(Add rule10)-->
[*]Rule0: A --> E , A BEFORE E, weight(torch)=0.0035.
[GT=0.7]Rule1: Not C --> E , Not C BEFORE E, weight(torch)=0.5947.
[*]Rule2: C --> E , C BEFORE E, weight(torch)=0.0013.
Rule3: C --> E , C EQUAL E, weight(torch)=0.3017.
Rule4: B --> E , B EQUAL E, weight(torch)=0.4905.
[*]Rule5: B --> Not E , B BEFORE Not E, weight(torch)=0.0080.
[*]Rule6: D --> E , D BEFORE E, weight(torch)=0.0076.
Rule7: Not A --> E , Not A BEFORE E, weight(torch)=0.0493.
[GT=0.3]Rule8: C ^ A --> E , C BEFORE E ^ A BEFORE E, weight(torch)=0.2957.
Rule9: D ^ Not C --> E , D BEFORE E ^ Not C BEFORE E, weight(torch)=0.0825.
[GT=0.6]Rule10: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight(torch)=0.2387.
delete these rules: [0, 2, 5, 6]
--(re-fitted, increase of R10 leads to increase of R8, and decrease of R0,R2,R5,R6 )-->
[GT=0.7]Rule0: Not C --> E , Not C BEFORE E, weight(torch)=0.5920.
Rule1: C --> E , C EQUAL E, weight(torch)=0.2025.
Rule2: B --> E , B EQUAL E, weight(torch)=0.5108.
Rule3: Not A --> E , Not A BEFORE E, weight(torch)=0.0442.
[GT=0.3]Rule4: C ^ A --> E , C BEFORE E ^ A BEFORE E, weight(torch)=0.3001.
Rule5: D ^ Not C --> E , D BEFORE E ^ Not C BEFORE E, weight(torch)=0.0918.
[GT=0.6]Rule6: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight(torch)=0.3490.
--(re-fitted, R6 is more accurate.)

===data-2:
Generate 1000 samples
with following rules:
Head = F, base = 0.0000
Rule0: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight=0.8000
Rule1: A ^ B ^ C --> F , A BEFORE F ^ B EQUAL F ^ C BEFORE F, weight=0.9000
Rule2: B ^ C ^ D --> F , B EQUAL F ^ C BEFORE F ^ D BEFORE F, weight=0.5000
Rule3: C ^ D --> F , C EQUAL F ^ D BEFORE F, weight=0.6000
Rule4: Not C --> F , Not C BEFORE F, weight=0.7000
Intensity A is 2, Intensity B is 2, Intensity C is 2, Intensity D is 2, Intensity E is 2
===
fit GT rules:
final result: Run 1500 batches
Head = F, base = 0.1068
[GT=0.8]Rule0: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight=0.7927
[GT=0.9]Rule1: A ^ B ^ C --> F , A BEFORE F ^ B EQUAL F ^ C BEFORE F, weight=0.7344
[GT=0.5]Rule2: B ^ C ^ D --> F , B EQUAL F ^ C BEFORE F ^ D BEFORE F, weight=0.5463
[GT=0.6]Rule3: C ^ D --> F , C EQUAL F ^ D BEFORE F, weight=0.4614
[GT=0.7]Rule4: Not C --> F , Not C BEFORE F, weight=0.7035
mid result :45 th iter
grad norm=0.008096818617000406. num_batch_no_update =144
Head = F, base = 0.1038
[GT=0.8]Rule0: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight=0.7818
[GT=0.9]Rule1: A ^ B ^ C --> F , A BEFORE F ^ B EQUAL F ^ C BEFORE F, weight=0.7342
[GT=0.5]Rule2: B ^ C ^ D --> F , B EQUAL F ^ C BEFORE F ^ D BEFORE F, weight=0.5675
[GT=0.6]Rule3: C ^ D --> F , C EQUAL F ^ D BEFORE F, weight=0.4588
[GT=0.7]Rule4: Not C --> F , Not C BEFORE F, weight=0.7109

===data-2,
num_iter=30
epsilon=0.005
gain_threshold=0.02
low_grad_threshold=0.01
low_grad_tolerance=2
weight_threshold=0.01
final_weight_threshold=0.1
learning_rate=0.005
max_num_rule=20
----
Head = F, base(torch) = 0.1071,
[GT=0.7]Rule0: Not C --> F , Not C BEFORE F, weight(torch)=0.3169.
Rule1: C --> F , C BEFORE F, weight(torch)=0.1841.
Rule2: B --> F , B EQUAL F, weight(torch)=0.0770.
Rule3: C --> F , C EQUAL F, weight(torch)=0.3780.
Rule4: A ^ Not C --> F , A BEFORE F ^ Not C BEFORE F, weight(torch)=0.2728.
Rule5: E ^ Not C --> F , E BEFORE F ^ Not C BEFORE F, weight(torch)=0.1139.
Rule6: B ^ Not C --> F , B EQUAL F ^ Not C BEFORE F, weight(torch)=0.3198.
Rule7: Not D ^ Not C --> F , Not D EQUAL Not C ^ Not C BEFORE F, weight(torch)=0.1626.
[GT=0.8]Rule8: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight(torch)=0.6204.
Rule9: B ^ C --> F , B EQUAL F ^ C BEFORE F, weight(torch)=0.5354.
[search_algorithm] Elapsed: 2.4803 hour.

===data-1,
num_iter=30
epsilon=0.005
gain_threshold=0.02
low_grad_threshold=0.01
low_grad_tolerance=2
weight_threshold=0.01
final_weight_threshold=0.1
learning_rate=0.005
max_num_rule=20
----
Head = E, base(torch) = 0.1134,
[GT=0.7]Rule0: Not C --> E , Not C BEFORE E, weight(torch)=0.4763.
Rule1: C --> E , C BEFORE E, weight(torch)=0.2570.
Rule2: A ^ Not C --> E , A BEFORE E ^ Not C BEFORE E, weight(torch)=0.2775.
Rule3: B ^ Not C --> E , B EQUAL E ^ Not C BEFORE E, weight(torch)=0.0934.
[GT=0.6]Rule4: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight(torch)=0.5512.
[GT=0.4]Rule5: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight(torch)=0.2719.
[GT=0.4]Rule6: A ^ B --> E , A BEFORE B ^ B EQUAL E, weight(torch)=0.1641.
Rule7: D ^ B --> E , D BEFORE E ^ B EQUAL E, weight(torch)=0.2140.
[search_algorithm] Elapsed: 3.8331 hour.

===data-1,
integral_resolution=0.3
decay_rate=1
batch_size=64
num_iter=30
epsilon=0.003
gain_threshold=0.02
low_grad_threshold=0.01
weight_threshold=0.01
strict_weight_threshold=0.1
learning_rate=0.005
max_num_rule=30
----
Head = E, base(torch) = 0.1105,
[GT=0.7]Rule0: Not C --> E , Not C BEFORE E, weight(torch)=0.7154.
Rule1: C --> E , C EQUAL E, weight(torch)=0.0941.
[GT=0.6]Rule2: D ^ C --> E , D BEFORE E ^ C EQUAL E, weight(torch)=0.3395.
[GT=0.4]Rule3: A ^ B --> E , A BEFORE E ^ B EQUAL E, weight(torch)=0.1187.
[GT=0.3]Rule4: A ^ C --> E , A BEFORE E ^ C BEFORE E, weight(torch)=0.2878.
Rule5: A ^ D ^ C --> E , A BEFORE E ^ D BEFORE E ^ C EQUAL E, weight(torch)=0.1561.
Rule6: Not C ^ A ^ B --> E , Not C BEFORE E ^ A BEFORE E ^ B EQUAL E, weight(torch)=0.1504.
Rule7: D ^ A ^ B --> E , D BEFORE E ^ A BEFORE E ^ B EQUAL E, weight(torch)=0.3371.
Rule8: C ^ A ^ B --> E , C BEFORE E ^ A BEFORE E ^ B EQUAL E, weight(torch)=0.2036.
[search_algorithm] Elapsed: 14.7993 hour.

==data-2
integral_resolution=0.3
decay_rate=1
batch_size=64
num_batch_check_for_update=300
num_iter=60
epsilon=0.003
gain_threshold=0.02
low_grad_threshold=0.01
low_grad_tolerance=2
weight_threshold=0.01
strict_weight_threshold=0.1
learning_rate=0.005
max_rule_body_length=3
max_num_rule=30
----
Head = F, base(torch) = 0.1006,
Rule0: C --> F , C BEFORE F, weight(torch)=0.3247.
Rule1: A ^ Not C --> F , A BEFORE F ^ Not C BEFORE F, weight(torch)=0.3980.
Rule2: E ^ Not C --> F , E BEFORE F ^ Not C BEFORE F, weight(torch)=0.2508.
Rule3: Not D ^ Not C --> F , Not D EQUAL Not C ^ Not C BEFORE F, weight(torch)=0.1968.
[GT=0.8]Rule4: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight(torch)=0.5047.
Rule5: E ^ C --> F , E EQUAL F ^ C BEFORE F, weight(torch)=0.1748.
[GT=0.6]Rule6: D ^ C --> F , D BEFORE F ^ C EQUAL F, weight(torch)=0.2812.
Rule7: B ^ C --> F , B BEFORE F ^ C EQUAL F, weight(torch)=0.2323.
Rule8: Not D ^ C --> F , Not D BEFORE F ^ C EQUAL F, weight(torch)=0.1585.
Rule9: Not D ^ C --> F , Not D EQUAL C ^ C EQUAL F, weight(torch)=0.1003.
Rule10: C ^ E --> Not F , C EQUAL Not F ^ E BEFORE Not F, weight(torch)=0.1302.
[GT=0.9]Rule11: A ^ B ^ C --> F , A BEFORE F ^ B EQUAL F ^ C BEFORE F, weight(torch)=0.3982.
[GT=0.9]Rule12: A ^ B ^ C --> F , A BEFORE B ^ B EQUAL F ^ C BEFORE F, weight(torch)=0.2094.
[GT=0.5]Rule13: D ^ B ^ C --> F , D BEFORE B ^ B EQUAL F ^ C BEFORE F, weight(torch)=0.3601.
[GT=0.5]Rule14: D ^ B ^ C --> F , D BEFORE F ^ B EQUAL F ^ C BEFORE F, weight(torch)=0.1471.
Rule15: Not A ^ B ^ C --> F , Not A BEFORE F ^ B EQUAL F ^ C BEFORE F, weight(torch)=0.1872.
Rule16: Not A ^ B ^ C --> F , Not A BEFORE C ^ B EQUAL F ^ C BEFORE F, weight(torch)=0.2843.
[search_algorithm] Elapsed: 11.1382 hour.

== data-2,
integral_resolution=0.1
batch_size=64
num_batch_check_for_gradient=20
num_batch_no_update_limit_opt=300
num_iter=5
epsilon=0.003
gain_threshold=0.02
low_grad_threshold=0.01
weight_threshold=0.01
strict_weight_threshold=0.1
learning_rate=0.005
max_num_rule=30
===
Head = F, base(torch) = 0.1253,
[GT=0.7]Rule0: Not C --> F , Not C BEFORE F, weight(torch)=0.7193.
[GT=0.8]Rule1: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight(torch)=0.7593.
[GT=0.6]Rule2: D ^ C --> F , D BEFORE F ^ C EQUAL F, weight(torch)=0.4779.
[GT=0.9]Rule3: B ^ A ^ C --> F , B EQUAL F ^ A BEFORE F ^ C BEFORE F, weight(torch)=0.6060.
Rule4: Not D ^ B ^ C --> F , Not D BEFORE B ^ B EQUAL F ^ C BEFORE F, weight(torch)=0.2171.
[GT=0.5]Rule5: D ^ B ^ C --> F , D BEFORE B ^ B EQUAL F ^ C BEFORE F, weight(torch)=0.1859.
[GT=0.5]Rule6: C ^ D ^ B --> F , C BEFORE B ^ D BEFORE B ^ B EQUAL F, weight(torch)=0.1942.
----- exit search_algorithm -----
[search_algorithm] Elapsed: 15.2801 hour.

== data-2,
integral_resolution=0.1
batch_size=64
num_batch_check_for_gradient=20
num_batch_no_update_limit_opt=300
num_iter=1
epsilon=0.003
gain_threshold=0.02
low_grad_threshold=0.01
weight_threshold=0.01
strict_weight_threshold=0.1
learning_rate=0.005
max_num_rule=30
===
Head = F, base(torch) = 0.1376,
Rule0: C --> F , C BEFORE F, weight(torch)=0.1905.
[GT=0.7]Rule1: Not C --> F , Not C BEFORE F, weight(torch)=0.5135.
Rule2: A ^ Not C --> F , A BEFORE F ^ Not C BEFORE F, weight(torch)=0.2341.
Rule3: B ^ Not C --> F , B EQUAL F ^ Not C BEFORE F, weight(torch)=0.1298.
[GT=0.8]Rule4: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight(torch)=0.4158.
Rule5: B ^ C --> F , B EQUAL F ^ C BEFORE F, weight(torch)=0.1732.
[GT=0.6]Rule6: D ^ C --> F , D BEFORE F ^ C EQUAL F, weight(torch)=0.2905.
[GT=0.6]Rule7: D ^ C --> F , D BEFORE C ^ C EQUAL F, weight(torch)=0.2138.
Rule8: B ^ A --> F , B EQUAL F ^ A BEFORE F, weight(torch)=0.1197.
Rule9: Not E ^ A ^ C --> F , Not E BEFORE F ^ A BEFORE F ^ C BEFORE F, weight(torch)=0.1321.
[GT=0.9]Rule10: B ^ A ^ C --> F , B EQUAL F ^ A BEFORE F ^ C BEFORE F, weight(torch)=0.4409.
Rule11: Not B ^ A ^ C --> F , Not B EQUAL C ^ A BEFORE F ^ C BEFORE F, weight(torch)=0.1453.
Rule12: Not D ^ A ^ Not C --> F , Not D EQUAL Not C ^ A BEFORE F ^ Not C BEFORE F, weight(torch)=0.1300.
----- exit search_algorithm -----
[search_algorithm] Elapsed: 11.9368 hour.

===data-3:
Generate 1000 samples
with following rules:
Head = G, base = 0.0000
Rule0: A ^ C --> G , A BEFORE G ^ C BEFORE G, weight=0.9000
Rule1: A ^ B ^ C --> G , A BEFORE G ^ B EQUAL G ^ C BEFORE G, weight=0.6000
Rule2: B ^ C ^ D --> G , B EQUAL G ^ C BEFORE G ^ D BEFORE G, weight=1.0000
Rule3: C ^ D --> G , C EQUAL G ^ D BEFORE G, weight=0.8000
Rule4: Not C --> G , Not C BEFORE G, weight=0.5000
cpu num = 48, use 16 workers. 
[Generate data] Elapsed: 16.8692 min.
=== fit GT rules:
[57 th iter] Elapsed: 5.9250 sec.
Run 857 batches
grad norm 0.00277548875967491 <= epsilon 0.003. OR, num_batch_no_update 68 >= num_batch_no_update_limit_opt 300
Finish optimize_log_likelihood, the log likelihood is -5.519892988426468
Params  [tensor([0.1922], dtype=torch.float64, requires_grad=True), tensor([0.8120], dtype=torch.float64, requires_grad=True), tensor([0.3869], dtype=torch.float64, requires_grad=True), tensor([0.9005], dtype=torch.float64, requires_grad=True), tensor([0.5637], dtype=torch.float64, requires_grad=True), tensor([0.5428], dtype=torch.float64, requires_grad=True)]
--------
Log-likelihood (torch)=  -5.519892988426468
rule set is:
Head = G, base = 0.1937
[GT=0.9]Rule0: A ^ C --> G , A BEFORE G ^ C BEFORE G, weight=0.8113
[GT=0.6]Rule1: A ^ B ^ C --> G , A BEFORE G ^ B EQUAL G ^ C BEFORE G, weight=0.3905
[GT=1.0]Rule2: B ^ C ^ D --> G , B EQUAL G ^ C BEFORE G ^ D BEFORE G, weight=0.9004
[GT=0.8]Rule3: C ^ D --> G , C EQUAL G ^ D BEFORE G, weight=0.5619
[GT=0.5]Rule4: Not C --> G , Not C BEFORE G, weight=0.5432
[Fit data] Elapsed: 46.1727 min.

===data-2
integral_resolution=0.1
batch_size=64
num_batch_no_update_limit_opt=300
num_iter=5
epsilon=0.003
gain_threshold=0.02
low_grad_threshold=0.01
weight_threshold=0.01
strict_weight_threshold=0.1
learning_rate=0.005
max_num_rule=30
===
Head = F, base = 0.1219
[GT=0.7]Rule0: Not C --> F , Not C BEFORE F, weight=0.7153
[GT=0.8]Rule1: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight=0.7321
[GT=0.6]Rule2: D ^ C --> F , D BEFORE F ^ C EQUAL F, weight=0.2837
[GT=0.6]Rule3: D ^ C --> F , D BEFORE C ^ C EQUAL F, weight=0.1365
[GT=0.9]Rule4: B ^ A ^ C --> F , B EQUAL F ^ A BEFORE F ^ C BEFORE F, weight=0.7149
Rule5: Not B ^ A ^ C --> F , Not B EQUAL C ^ A BEFORE F ^ C BEFORE F, weight=0.2141
[GT=0.5]Rule6: B ^ D ^ C --> F , B BEFORE F ^ D BEFORE F ^ C EQUAL F, weight=0.1157
[GT=0.5]Rule7: D ^ B ^ C --> F , D BEFORE F ^ B EQUAL F ^ C BEFORE F, weight=0.2242
Rule8: Not D ^ B ^ C --> F , Not D BEFORE F ^ B EQUAL F ^ C BEFORE F, weight=0.2386
Rule9: Not A ^ Not D ^ Not C --> F , Not A BEFORE F ^ Not D EQUAL Not C ^ Not C BEFORE F, weight=0.2531
[search_algorithm] Elapsed: 9.7872 hour.

===data-2
integral_resolution=0.1
batch_size=64
num_batch_no_update_limit_opt=300
num_iter=5
epsilon=0.003
gain_threshold=0.02
low_grad_threshold=0.01
weight_threshold=0.01
strict_weight_threshold=0.1
learning_rate=0.005
max_num_rule=30
(No time-windows)
===
Train finished, rule set is:
Head = F, base = 0.1366
Rule0: C --> F , C BEFORE F, weight=0.1255
[GT=0.7]Rule1: Not C --> F , Not C BEFORE F, weight=0.6094
Rule2: A ^ Not C --> F , A BEFORE F ^ Not C BEFORE F, weight=0.1343
[GT=0.8]Rule3: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight=0.4954
[GT=0.6]Rule4: D ^ C --> F , D BEFORE F ^ C EQUAL F, weight=0.5252
Rule5: D ^ B --> F , D BEFORE B ^ B EQUAL F, weight=0.1368
[GT=0.9]Rule6: B ^ A ^ C --> F , B EQUAL F ^ A BEFORE F ^ C BEFORE F, weight=0.7567
Rule7: Not B ^ A ^ C --> F , Not B EQUAL C ^ A BEFORE F ^ C BEFORE F, weight=0.1501
Rule8: Not E ^ A ^ C --> F , Not E BEFORE F ^ A BEFORE F ^ C BEFORE F, weight=0.1520
[GT=0.5]Rule9: C ^ D ^ B --> F , C BEFORE B ^ D BEFORE B ^ B EQUAL F, weight=0.3122
----- exit search_algorithm -----
[search_algorithm] Elapsed: 5.2102 hour.

===data-2
time_window = 5, fit GT===
Head = F, base = 0.1419
Rule0: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight=0.7690
Rule1: A ^ B ^ C --> F , A BEFORE F ^ B EQUAL F ^ C BEFORE F, weight=0.6335
Rule2: B ^ C ^ D --> F , B EQUAL F ^ C BEFORE F ^ D BEFORE F, weight=0.8186
Rule3: C ^ D --> F , C EQUAL F ^ D BEFORE F, weight=0.5050
Rule4: Not C --> F , Not C BEFORE F, weight=0.7205
time_window = 6, fit GT===
Head = F, base = 0.1219
Rule0: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight=0.7716
Rule1: A ^ B ^ C --> F , A BEFORE F ^ B EQUAL F ^ C BEFORE F, weight=0.1963
Rule2: B ^ C ^ D --> F , B EQUAL F ^ C BEFORE F ^ D BEFORE F, weight=1.0928
Rule3: C ^ D --> F , C EQUAL F ^ D BEFORE F, weight=0.6743
Rule4: Not C --> F , Not C BEFORE F, weight=0.6510
time_window = 8, fit GT===
Head = F, base = 0.1485
Rule0: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight=0.7402
Rule1: A ^ B ^ C --> F , A BEFORE F ^ B EQUAL F ^ C BEFORE F, weight=1.1289
Rule2: B ^ C ^ D --> F , B EQUAL F ^ C BEFORE F ^ D BEFORE F, weight=0.1039
Rule3: C ^ D --> F , C EQUAL F ^ D BEFORE F, weight=0.4319
Rule4: Not C --> F , Not C BEFORE F, weight=0.7500

===data-3 time_window = 4, fit GT ===
Head = G, base = 0.1738
Rule0: A ^ C --> G , A BEFORE G ^ C BEFORE G, weight=0.8484
Rule1: A ^ B ^ C --> G , A BEFORE G ^ B EQUAL G ^ C BEFORE G, weight=0.4887
Rule2: B ^ C ^ D --> G , B EQUAL G ^ C BEFORE G ^ D BEFORE G, weight=1.1548
Rule3: C ^ D --> G , C EQUAL G ^ D BEFORE G, weight=0.6840
Rule4: Not C --> G , Not C BEFORE G, weight=0.5305

===data-2, time_window=10==
[Generate data] Elapsed: 4.3923 hour.
Head = F, base = 0.1639
[GT=0.8]Rule0: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight=0.6437
[GT=0.9]Rule1: A ^ B ^ C --> F , A BEFORE F ^ B EQUAL F ^ C BEFORE F, weight=0.7335
[GT=0.5]Rule2: B ^ C ^ D --> F , B EQUAL F ^ C BEFORE F ^ D BEFORE F, weight=0.4224
[GT=0.6]Rule3: C ^ D --> F , C EQUAL F ^ D BEFORE F, weight=0.5587
[GT=0.7]Rule4: Not C --> F , Not C BEFORE F, weight=0.8571
===
[Generate data] Elapsed: 55.7610 min.
Head = F, base = 0.1372
[GT=0.8]Rule0: A ^ C --> F , A BEFORE F ^ C BEFORE F, weight=0.7136
[GT=0.9]Rule1: A ^ B ^ C --> F , A BEFORE F ^ B EQUAL F ^ C BEFORE F, weight=0.7823
[GT=0.5]Rule2: B ^ C ^ D --> F , B EQUAL F ^ C BEFORE F ^ D BEFORE F, weight=0.5003
[GT=0.6]Rule3: C ^ D --> F , C EQUAL F ^ D BEFORE F, weight=0.5750
[GT=0.7]Rule4: Not C --> F , Not C BEFORE F, weight=0.7399