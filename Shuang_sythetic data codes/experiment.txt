run (fit data-2, worker_num=16, iter_num=5) setsid python3 logic_learning_2.py  1>out-2.txt 2>err-2.txt at Mar1, 16:37

run (fit data-2 multiprocess likelihood, batch_size_mp=64) setsid python3 logic_learning_2.py 1>out-3.txt 2>err-3.txt, at Mar4,9:38
run (generate data-2 with time-window=10, add feature filter) setsid python3 generate_synthetic_data.py 1>out-1.txt 2>err-1.txt at Mar5, 20:29
run (generate data-2 with time-window=10) setsid python3 generate_synthetic_data.py 1>out-.txt 2>err-.txt at Mar5, 19:34

run setsid python3 generate_synthetic_data.py at Mar6,16:53, generate 100 samples for data-4
run setsid python3 generate_synthetic_data.py at Mar6,16:57, generate 2000 samples for data-4

at Mar6,21:35-21:36, fit 320,640,1280 samples of data-4
at Mar7,10:02-10:05, fit 2560,1280,640 samples of data-4. remove fix of bug#73, and set rule_num to 20.
at Mar7,23:10 re-generate data-4
at Mar7,23:32, re-generate simple data-4 fit 1280,640 samples of data-4. 
at Mar8,10:27-28, tune hyper-params,  fit data-4 2560,1280,640, samples. 
at Mar8,15:36-41, tune hyper-params,  fit data-4 2560,1280,640, samples. 
at Mar8,17:09 use cp(ecos solver), fit 320 samples
at Mar8,17:54 use cp(mosek solver, single thread), fit 320 samples
at Mar8,17:58 use cp(mosek solver, 8 thread), fit 320 samples

at Mar8,20:08-09 use cp(mosek solver, single thread), fit 320,640,1280 samples

at Mar9,13:20 use cp(mosek), fit 320 samples, start from Rule6
at Mar9,15:27 use cp(mosek), fit 320 samples, start from Null.
at Mar9,20:47 use cp(scs), fit 320 samples, start from Null.
at Mar9,20:58 use cp(mosek), fit 320 samples, start from Null.

at Mar10,18:53 use cp(mosek), fix unbounded bug, fit 320 samples, start from Null.

at Mar10,23:21 use cp(mosek),  fit data-4, 640 samples, start from Null.

at Mar10,23:30 use cp(mosek), fit data-4, 1280 samples, start from Null.

at Mar11, 10:42, use torch, fit data-4, 2560 samples, start from Null. promising result.
at Mar11, 16:31, use torch, fit data-4, 1200 samples, start from Null. 
at Mar11, 18:15, use torch, modify rule-set=15, worker_num=12, fit data-4, 1200 samples, start from Null. promising reuslt.
at Mar11, 19:23, use torch, modify rule-set=15, worker_num=12, fit data-4, 600 samples, start from Null.
at Mar11, 20:24, use torch, modify rule-set=15, worker_num=12, fit data-4, 2400 samples, start from Null.

at Mar12, 10:19, use DFS, torch, worker_num=12, num_iter=12, fit data-4, 600 samples
at Mar12, 11:09, use DFS, torch, worker_num=12, num_iter=6, fit data-4, 1200 samples
at Mar12, 11:12, use DFS, torch, worker_num=12, num_iter=3, fit data-4, 2400 samples

data-4{
    at Mar12, 15:22, 15:22, 15:25 use BFS, torch, worker_num=12, num_iter=12, fit data-4, 600,1200,2400 samples
    at Mar12, 15:52, 15:56, 15:59, fit GT rules, torch, worker_num=12, num_iter=50, data-4, 600, 1200, 2400 samples.
    at Mar13, 10:29, use DFS, torch, worker_num=12, num_iter=12, fit data-4, 600,1200,2400 samples
    at Mar17, 10:51, re-run experiment group.
    at Mar17, 21:09, re-generate data-4, and fit GT rules.
    at Mar17, 21:11, re-run experiment group on newly generated data
    at Mar18, 08:35, re-fit GT rules

}

data-5{
    at Mar12, 16:27, generate data-5. data-5 has same rule set with data-4, but w=0.5 
    at Mar12, 16:28, fit GT rules, torch, worker_num=12, num_iter=50, data-5, 600,1200,2400 samples.
    at Mar13, 09:56, tune prune-weights, use DFS and BFS, torch, worker_num=12, num_iter=12, fit data-5, 600,1200,2400 samples
}

data-6{
    at Mar12, 16:36, generate data-6. data-6 has same rule set with data-4, but w=1.5 
                    fit GT rules, torch, worker_num=12, num_iter=50, data-6, 600,1200,2400 samples.
    at Mar12, 23:37, use DFS and BFS, torch, worker_num=12, num_iter=12, fit data-6, 600,1200,2400 samples
    at Mar13, 09:55, tune prune-weights, use DFS and BFS, torch, worker_num=12, num_iter=12, fit data-6, 600,1200,2400 samples
}

data-7{
    at Mar13, 23:48, generate data-7.  
    at Mar13, 23:59, run experiment group.
    at Mar14, 10:12, fit GT rules.
    at Mar14, 10:57, re-generate data-7, and fit GT rules. modify len-3 rule weight from 1 to 5.
    at Mar14, 11:33, re-generate data-7, and fit GT rules. modify len-3 rule weight from 5 to 2.
    at Mar14, 15:25, run experiment group.
}

data-8{
    at Mar13, 23:49, generate data-8.  
    at Mar14, 00:00, run experiment group.
    at Mar14, 10:13, fit GT rules.
}

data-9{
    at Mar13, 23:49, generate data-9. 
    at Mar14, 00:01, run experiment group. 
    at Mar14, 10:14, fit GT rules.
    at Mar14, 10:25, re-run experiment group,  change prune-weight from 0.3 to 0.1, 
    at Mar14, 21:39, re-generate data-9, and fit GT rules. modify intensity of E(dummy) from 1 to 0.2. 
    at Mar14, 22:45, run experiment group. with prune-weight=0.1.
    at Mar14, 23:19, run experiment group. with prune-weight=0.3.(failed, due to 2-bases)
    at Mar15, 10:22, run experiment group. with prune-weight=0.3.

}

data-10{
    at Mar14, 23:11, generate data-10 and fit GT rules.
    at Mar14, 23:21, run experiment group. (failed, due to 2-bases)
}

data-11{
    at Mar15, 10:28, generate data-11.
    at Mar15, 10:34, fit GT rules.
    at Mar15, 10:35, run experiment group. (1-5)
    at Mar16, 09:10, run experiment 6.
    at Mar18, 08:38, re-fit GT rules.
}


data-12{
    at Mar17, 23:06, generate data
    at Mar17, 23:27, run experiment group
    ar Mar18, 08:45, fit GT rules
}

data-13{
    at Mar17, 23:07, generate data
    at Mar17, 23:30, run experiment group
    ar Mar18, 08:45, fit GT rules
    at MAr18, 21:11, re-run experiment group, fix bug
}

data-14{
    at Mar17, 23:08, generate data
    at Mar17, 23:33, run experiment group
    ar Mar18, 08:46, fit GT rules
    at MAr18, 21:11, re-run experiment group, fix bug
}

data-15{
    at Mar17, 23:09, generate data
    at Mar17, 23:33, run experiment group
    ar Mar18, 08:46, fit GT rules
    at MAr18, 21:13, re-run experiment group, fix bug
}

data-16{
    at Mar17, 23:10, generate data
    at Mar17, 23:34, run experiment group
    ar Mar18, 09:27, fit GT rules
}

data-17{
    2021-05-08 22:24:34.463477, generate and fit GT
}


crime{
    downtown_month  2021-05-10 22:33:11.751520
    other_month 2021-05-10 23:15:04.844334
    downtown/other year 2021-05-11 09:28:05.331101

    all_day, after fixing bug#96-97 2021-05-14 21:45:56.234398
    all_twodays 2021-05-14 23:49:10.429735
    all_week 2021-05-15 00:03:45.510283
    all_month 2021-05-15 00:04:18.110521

    all_week aftre tuning params 2021-05-15 08:59:38.236703 (abort??)
    all_week aftre tuning params 2021-05-15 09:53:51.903036
    allow Not 2021-05-16 09:11:15.494265

    ./data/crime_all_week.npy
    sample num is  1872
    seq length mean = 166.9721, std = 0.6669.

    ./data/crime_all_twodays.npy
    sample num is  939
    seq length mean = 46.9891, std = 0.6710.

    ./data/crime_all_day.npy
    sample num is  1879
    seq length mean = 22.9707, std = 0.6669.
}


mimic{
    ./data/mimic_1.npy
    sample num is  2020
    seq length mean = 426.3146, std = 418.5450.
    ./data/mimic_2.npy
    sample num is  2241
    seq length mean = 244.4200, std = 264.4859.

    first try: 2021-05-14 19:15:42.871314
    second try, after fixing bug#96-97: 2021-05-15 00:06:26.243448
    aftre tuning params : 2021-05-15 09:09:39.836282

    dataset_path is  ./data/mimic_1.npy
    sample num is  2023
    num pred is 62
    seq length mean = 506.7102, std = 467.8244.
    seq size mean = 2.0005, std = 0.0222.

    dataset_path is  ./data/mimic_1_scaled.npy
    sample num is  2023
    num pred is 62
    seq length mean = 10.1342, std = 9.3565.
    seq size mean = 2.0005, std = 0.0222.
    seq total size mean = 80.9768, std = 5.0755.

    dataset_path is  ./data/mimic_2.npy
    sample num is  2275
    num pred is 62
    seq length mean = 315.6981, std = 307.5989.
    seq size mean = 1.9996, std = 0.0210.

}